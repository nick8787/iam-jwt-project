server.port=8189
server.servlet.context-path=/

jwt.secret=984hg493gh0439rthr0429uruj2309yh937gc763fe87t3f89723gf
jwt.lifetime=3000124

internal.iam.service.name=iam-service
internal.utils.service.name=utils-service
internal.service.key=LE7T0UY5W5QSVRQW0LC49B5364FW44QRT1SB8PFQ7CC9OZQM733KDN0A8GO1O6V6
internal.service.names=${internal.iam.service.name},${internal.utils.service.name},localhost

spring.application.name=iam-service
spring.datasource.url=jdbc:postgresql://localhost:5432/jwt_database
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.default_schema=v1_iam_service
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=v1_iam_service

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# Kafka
kafka.enabled=true
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=iam_service

additional.kafka.topic.iam.service.logs=iam_logs

spring.kafka.listener.ack-mode=manual

spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.batch-size=50000
spring.kafka.retry.topic.enabled=true

logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.org.springframework.security=DEBUG

end.points.id=/{id}
end.points.users=/users
end.points.posts=/posts
end.points.create=/create
end.points.comments=/comments

swagger.servers.first=http://localhost:8100
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8101/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

# OAuth2 Configuration for Google
spring.security.oauth2.client.registration.google.client-id=61749202326-ojhptff4fhro1905qiq9oml6cdg7c2kv.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8189/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# OAuth2 Configuration for Facebook
spring.security.oauth2.client.registration.facebook.client-id=your-facebook-client-id
spring.security.oauth2.client.registration.facebook.client-secret=your-facebook-client-secret
spring.security.oauth2.client.registration.facebook.scope=email, public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.facebook.client-name=Facebook
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# OAuth2 Configuration for GitHub
spring.security.oauth2.client.registration.github.client-id=your-github-client-id
spring.security.oauth2.client.registration.github.client-secret=your-github-client-secret
spring.security.oauth2.client.registration.github.scope=read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id
