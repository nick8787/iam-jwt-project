server.port=8189
server.servlet.context-path=/

  # Jwt
jwt.secret=984hg493gh0439rthr0429uruj2309yh937gc763fe87t3f89723gf
jwt.lifetime=3000124

  # Additional Jwt
jwt.secret.utils-service=KG815Y4VB79NEZ4ZNYJEOTD7IKSCTZT1LTKN3TIG57T5N0JIO90ZAE9IQE3IUOF2
jwt.expiration=300000

  # Password Recovery
recovery.password.lifetime-in-sec=1800

  # Internal additions
internal.iam.service.name=pw-iam
internal.utils.service.name=pw-utils
internal.service.key=LE7T0UY5W5QSVRQW0LC49B5364FW44QRT1SB8PFQ7CC9OZQM733KDN0A8GO1O6V6
internal.service.names=${internal.iam.service.name},${internal.utils.service.name},localhost

  # Flyway, datasource
spring.application.name=iam-service
spring.datasource.url=jdbc:postgresql://localhost:5432/jwt_database
spring.datasource.username=postgres
spring.datasource.password=Kolya8787
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=v1_iam_service
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=v1_iam_service

  # Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=iam_service

spring.kafka.listener.ack-mode=manual

spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.batch-size=50000
spring.kafka.retry.topic.enabled=true

  # Additional Kafka
additional.kafka.topic.iam.service.logs=iam_logs2

  # Logger
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG

  # Iam service configuration
end.points.id=/{id}
end.points.users=/users
end.points.posts=/posts
end.points.create=/create
end.points.comments=/comments

  # Swagger
swagger.servers.first=http://localhost:8100
springdoc.swagger-ui.path=/swagger

  # Eureka
eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:8101/eureka/
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=localhost
